
name: PythonWheels

on: [push]

jobs:
  build_linux:

    runs-on: ubuntu-latest
    env:
      DOCKER_MACHINE_TAG: "v2.1.0"
      # TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }} # To be eventually set for pypi upload
      # TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }} # To be eventually set for pypi upload
    strategy:
      matrix:
        python-version: [3.8] # [3.5, 3.6, 3.7, 3.8, 3.9]
        bitness: [32, 64]

    steps:

    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build the package
      shell: bash
      working-directory: "wrappers/Python/manylinux"
      run: |
        # Set specific environment variables
        if [[ "${{ matrix.bitness }}" == "64" ]]
        then
            DOCKER_IMG_NAME="coolprop/manylinux"
        elif [[ "${{ matrix.bitness }}" == "32" ]]
        then
            DOCKER_IMG_NAME="coolprop/manylinux32"
        fi
        SETUP_PY_ARGS="cmake=default,${{ matrix.bitness }}"

        # Get the directory containing this script
        # see http://stackoverflow.com/a/246128/1360263
        CUR_DIR="$( pwd )"
        # Go up three directories
        pushd ${CUR_DIR}/../../..
        # Run the build script
        chmod +x ${CUR_DIR}/01_build_wheels.sh

        # Run docker
        docker run -itd --name manylinux ${DOCKER_IMG_NAME}:${DOCKER_MACHINE_TAG} bash
        docker cp . manylinux:/io
        docker exec manylinux /io/wrappers/Python/manylinux/01_build_wheels.sh ${SETUP_PY_ARGS}
        docker cp manylinux:/io/install_root install_root
        docker stop manylinux
        docker rm manylinux
        popd

    # Wheel upload should be done to pypi, eventually
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: PythonWheels
        path: install_root
      # run: |
      #   pip install twine
      #   twine upload dist/*


  build_other:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [3.8] # [3.5, 3.6, 3.7, 3.8, 3.9]
        architecture: [x86, x64]
        exclude:
          - os: macOS-latest
            architecture: x86

    steps:
    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      shell: bash
      working-directory: "wrappers/Python"
      run: |
        pip install --user --upgrade pip
        # pip install --user flake8 pytest
        pip install --user cython requests jinja2 wheel
        #pip install --user twine cibuildwheel==1.1.0

    - name: Build the package
      shell: bash
      working-directory: "wrappers/Python"
      #env:
      #  CIBW_BEFORE_BUILD: pip install pybind11 cython wheel
      run: |
        python generate_meta_info.py
        python setup.py bdist_wheel --dist-dir ../../install_root/Python bdist_wininst --dist-dir ../../install_root/Python
        #python -m cibuildwheel --output-dir ../../install_root/Python
        python setup.py clean

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: PythonWheels
        path: install_root
