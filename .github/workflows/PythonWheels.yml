
name: PythonWheels

on: [push]

jobs:
  build_linux:

    runs-on: ubuntu-latest
    env:
      CIBW_BUILD: "cp38-*"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      CIBW_MANYLINUX_I686_IMAGE: manylinux1
      # TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }} # To be eventually set for pypi upload
      # TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }} # To be eventually set for pypi upload

    steps:

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64

    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install twine cibuildwheel

    - name: Build wheels
      working-directory: "wrappers/Python"
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Store wheels as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

    # Wheel upload should be done to pypi, eventually
    # - name: Upload wheels to pypi
      # run: |
      #   pip install twine
      #   twine upload dist/*


  build_windows:

    runs-on: windows-latest
    env:
      CIBW_BUILD: "cp38-*"

    steps:
    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      shell: bash
      run: |
        pip install --upgrade pip
        pip install twine cibuildwheel

    - name: Build wheels
      shell: bash
      working-directory: "wrappers/Python"
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Store wheels as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

    # Wheel upload should be done to pypi, eventually
    # - name: Upload wheels to pypi
      # run: |
      #   pip install twine
      #   twine upload dist/*



  build_macOS:

    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: "cp38-*"
    strategy:
      matrix:
        os: [macos-latest]
        # os: [macos-10.15, macos-11]

    steps:
    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      shell: bash
      run: |
        pip install --upgrade pip
        pip install twine cibuildwheel

    - name: Build the package
      shell: bash
      working-directory: "wrappers/Python"
      #env:
      #  CIBW_BEFORE_BUILD: pip install pybind11 cython wheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - name: Store wheels as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

    # Wheel upload should be done to pypi, eventually
    # - name: Upload wheels to pypi
      # run: |
      #   pip install twine
      #   twine upload dist/*

