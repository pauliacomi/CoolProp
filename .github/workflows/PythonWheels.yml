
name: PythonWheels

on: [push]

jobs:
  build_linux:

    name: Build wheel for cp${{ matrix.python-version }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    env:
      DOCKER_MACHINE_TAG: "v2.1.0"
      SETUP_PY_ARGS: "cmake=default,${{ matrix.bitness }}"
      DOCKER_IMG_NAME: "${{ matrix.manylinux_image }}"
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8] # [3.5, 3.6, 3.7, 3.8, 3.9]
        bitness: [32, 64]
        manylinux_image: [coolprop/manylinux, coolprop/manylinux32]
        include:
          - os: ubuntu-latest
            bitness: 64
            manylinux_image: coolprop/manylinux
          - os: ubuntu-latest
            bitness: 32
            manylinux_image: coolprop/manylinux32

    steps:

    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install twine

    - name: Build wheels
      working-directory: "wrappers/Python/manylinux"
      run: |

        # Get the directory containing this script
        # see http://stackoverflow.com/a/246128/1360263
        CUR_DIR="$( pwd )"
        # Go up three directories
        pushd ${CUR_DIR}/../../..

        # Run docker
        docker run -itd --name manylinux $DOCKER_IMG_NAME:$DOCKER_MACHINE_TAG bash
        docker cp . manylinux:/io
        docker exec manylinux /io/wrappers/Python/manylinux/01_build_wheels.sh $SETUP_PY_ARGS
        docker cp manylinux:/io/install_root install_root
        docker stop manylinux
        docker rm manylinux

    - name: Store wheels as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./install_root/*.whl

    # Wheel upload should be done to pypi, eventually
    # - name: Upload wheels to pypi
      # env: |
      #   TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }} # To be eventually set for pypi upload
      #   TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }} # To be eventually set for pypi upload
      # run: |
      #   pip install twine
      #   twine upload dist/*
