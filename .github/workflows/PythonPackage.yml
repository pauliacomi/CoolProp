# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PythonPackage

on: [push]

#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    #strategy:
    #  matrix:
    #    os: [windows-latest, ubuntu-latest, macOS-latest]
    #    python-version: [3.5, 3.6, 3.7, 3.8]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - name: Checkout from git
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash
      working-directory: "wrappers/Python"
      #run: |
      #  python -m pip install --upgrade pip
      #  pip install flake8 pytest
      #  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      run: |
        pip install --upgrade pip
        pip install flake8 pytest
        pip install cython requests jinja2 pyyaml pycrypto wheel

    #- name: Lint with flake8
    #  shell: bash
    #  working-directory: "wrappers/Python"
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest

    - name: Build the package
      shell: bash
      working-directory: "wrappers/Python"
      run: |
        python generate_meta_info.py
        python setup.py install
        python setup.py clean
